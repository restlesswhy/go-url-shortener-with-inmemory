// Code generated by MockGen. DO NOT EDIT.
// Source: pg_repository.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/restlesswhy/grpc/url-shortener-microservice/internal/models"
)

// MockUSRepository is a mock of USRepository interface.
type MockUSRepository struct {
	ctrl     *gomock.Controller
	recorder *MockUSRepositoryMockRecorder
}

// MockUSRepositoryMockRecorder is the mock recorder for MockUSRepository.
type MockUSRepositoryMockRecorder struct {
	mock *MockUSRepository
}

// NewMockUSRepository creates a new mock instance.
func NewMockUSRepository(ctrl *gomock.Controller) *MockUSRepository {
	mock := &MockUSRepository{ctrl: ctrl}
	mock.recorder = &MockUSRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUSRepository) EXPECT() *MockUSRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockUSRepository) Create(ctx context.Context, longUrl, shortUrl string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, longUrl, shortUrl)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockUSRepositoryMockRecorder) Create(ctx, longUrl, shortUrl interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockUSRepository)(nil).Create), ctx, longUrl, shortUrl)
}

// Get mocks base method.
func (m *MockUSRepository) Get(ctx context.Context, longUrl, shortUrl string) (models.UrlsLS, bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, longUrl, shortUrl)
	ret0, _ := ret[0].(models.UrlsLS)
	ret1, _ := ret[1].(bool)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// Get indicates an expected call of Get.
func (mr *MockUSRepositoryMockRecorder) Get(ctx, longUrl, shortUrl interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockUSRepository)(nil).Get), ctx, longUrl, shortUrl)
}
