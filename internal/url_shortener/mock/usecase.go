// Code generated by MockGen. DO NOT EDIT.
// Source: usecase.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUrlShortenerUseCase is a mock of UrlShortenerUseCase interface.
type MockUrlShortenerUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockUrlShortenerUseCaseMockRecorder
}

// MockUrlShortenerUseCaseMockRecorder is the mock recorder for MockUrlShortenerUseCase.
type MockUrlShortenerUseCaseMockRecorder struct {
	mock *MockUrlShortenerUseCase
}

// NewMockUrlShortenerUseCase creates a new mock instance.
func NewMockUrlShortenerUseCase(ctrl *gomock.Controller) *MockUrlShortenerUseCase {
	mock := &MockUrlShortenerUseCase{ctrl: ctrl}
	mock.recorder = &MockUrlShortenerUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUrlShortenerUseCase) EXPECT() *MockUrlShortenerUseCaseMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockUrlShortenerUseCase) Create(ctx context.Context, longUrl string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, longUrl)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockUrlShortenerUseCaseMockRecorder) Create(ctx, longUrl interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockUrlShortenerUseCase)(nil).Create), ctx, longUrl)
}

// Get mocks base method.
func (m *MockUrlShortenerUseCase) Get(ctx context.Context, shortUrl string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", ctx, shortUrl)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockUrlShortenerUseCaseMockRecorder) Get(ctx, shortUrl interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockUrlShortenerUseCase)(nil).Get), ctx, shortUrl)
}
